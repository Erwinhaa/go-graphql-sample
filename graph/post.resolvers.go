package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"myapp/graph/generated"
	"myapp/graph/model"
	"myapp/services"
)

// Create is the resolver for the create field.
func (r *postMutationResolver) Create(ctx context.Context, obj *model.PostMutation, input model.NewPost) (*model.Post, error) {
	s := services.GetTransaction()

	post, _ := s.CreatePost(ctx, input)

	s.Commit()

	return post, nil
}

// Posts is the resolver for the posts field.
func (r *postQueryResolver) Posts(ctx context.Context, obj *model.PostQuery) ([]*model.Post, error) {
	s := services.GetService()

	posts, _ := s.GetAllPosts(ctx)

	return posts, nil
}

// PostMutation returns generated.PostMutationResolver implementation.
func (r *Resolver) PostMutation() generated.PostMutationResolver { return &postMutationResolver{r} }

// PostQuery returns generated.PostQueryResolver implementation.
func (r *Resolver) PostQuery() generated.PostQueryResolver { return &postQueryResolver{r} }

type postMutationResolver struct{ *Resolver }
type postQueryResolver struct{ *Resolver }
